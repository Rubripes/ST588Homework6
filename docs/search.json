[
  {
    "objectID": "ST588Homework6.html",
    "href": "ST588Homework6.html",
    "title": "ST588 Homework 6\nMatt Bray",
    "section": "",
    "text": "We’ll hide warnings with this code:\nFirst, call packages that will be used in this assignment.\nlibrary(tidyverse)\nlibrary(httr)\nlibrary(jsonlite)"
  },
  {
    "objectID": "ST588Homework6.html#task-1-conceptual-questions",
    "href": "ST588Homework6.html#task-1-conceptual-questions",
    "title": "ST588 Homework 6\nMatt Bray",
    "section": "Task 1: Conceptual Questions",
    "text": "Task 1: Conceptual Questions\n\n1.What is the purpose of the lapply() function? What is the equivalent purrr function?\n\n\nlapply() applies a vectorized function to a list. The map() function is the purrr equivalent.\n\n\n\n2.Suppose we have a list called my_list. Each element of the list is a numeric data frame (all columns are numeric). We want to use lapply() to run the code cor(numeric_matric, method = \"kendall\") on each element of the list. Write code to do this below! (I’m really trying to ask you how you specify method = \"kendall\" when calling lapply())\n\n#this will create three data frames and combine them to create a list of length 3, \"my_list\" to test my answer.\nA &lt;- as_tibble(rnorm(100)) |&gt;\n  rename(\"a\" = \"value\")|&gt;\n  mutate(b = rnorm(100)) |&gt;\n  mutate(c = rnorm(100))\n  \nB &lt;- as_tibble(rnorm(100)) |&gt;\n  rename(\"a\" = \"value\")|&gt;\n  mutate(b = rnorm(100)) |&gt;\n  mutate(c = rnorm(100))\n\nC&lt;- as_tibble(rnorm(100)) |&gt;\n  rename(\"a\" = \"value\")|&gt;\n  mutate(b = rnorm(100)) |&gt;\n  mutate(c = rnorm(100))\n\nA.df &lt;- as.data.frame(A)\nB.df &lt;- as.data.frame(B)\nC.df &lt;- as.data.frame(C)\n\nmy_list &lt;- list(A.df, B.df, C.df)\n\n#This code applies the `cor` function to all elements of my_list.\nlapply(X=my_list, FUN=cor, method=\"kendall\")\n\n[[1]]\n            a           b           c\na  1.00000000 -0.05212121 -0.04606061\nb -0.05212121  1.00000000  0.07919192\nc -0.04606061  0.07919192  1.00000000\n\n[[2]]\n           a           b           c\na 1.00000000  0.08363636  0.06747475\nb 0.08363636  1.00000000 -0.03595960\nc 0.06747475 -0.03595960  1.00000000\n\n[[3]]\n           a           b           c\na  1.0000000 -0.10585859 -0.14666667\nb -0.1058586  1.00000000  0.02989899\nc -0.1466667  0.02989899  1.00000000\n\n\n\n3.What are two advantages for using purrr functions instead of the BaseR apply family?\n\n\nThere is more consistency between the functions’ syntax\nAnd the helper functions\n\n\n4.What is a side-effect function?\n\n\nIt is a function that returns something outside of the input dataset.\nFor instance, print() would be a side-effect function, since it doesn’t do anything to the original dataset.\n\n\n5.Why can you name a variable sd in a function and not cause any issues with the sd function?\n\n\nThe custom function that contains sd has its own environment, and once the custom function is done execution, that environment ceases to exist."
  },
  {
    "objectID": "ST588Homework6.html#task-2---writing-r-functions",
    "href": "ST588Homework6.html#task-2---writing-r-functions",
    "title": "ST588 Homework 6\nMatt Bray",
    "section": "Task 2 - Writing R Functions",
    "text": "Task 2 - Writing R Functions\n\nWrite a basic function (call it getRMSE()) tht takes in a vector of responses and a vector of predictions and outputs RMSE.\n\nRMSE:\n\\[RMSE = \\sqrt{\\frac{1}{n}\\sum_{i=1}^n (y_i - \\hat{y}_i)^2}\\]\n\nIf a value is missing for the vector of responses (i.e. an NA is present), allow for additional arguments to the mean()function (elipses) that removes the NA values in the computation.\n\nCreate function getRMSE():\n\ngetRMSE &lt;- function(responses, predictions, ...){\n  SE &lt;- as.numeric(map2(responses, predictions, \\(x,y) (x-y)^2))\n  MSE &lt;- mean(SE,...)\n  RMSE &lt;- sqrt(MSE)\n  return(RMSE)\n}\n\n\nThe following code will generate some response values and predictions:\n\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\nTest getRMSE() function:\n\ngetRMSE(resp, pred)\n\n[1] 0.9581677\n\n\nAdd missing values and test getRMSE() function:\n\nresp.1 &lt;- resp\nresp.1[13] &lt;- NA_real_\nresp.1[43] &lt;- NA_real_\nresp.1\n\n  [1]  7.674144  5.733128  8.637031 12.068788  4.357179  6.040709  4.843093\n  [8]  6.255948  8.512399  7.587703  8.278962  8.221201        NA  9.299369\n [15]  7.646876  8.504220  4.254724  5.160568  7.550652 10.115022 12.028134\n [22]  7.723097  9.702653  6.337183  5.568563 11.239175  9.903050  4.965503\n [29]  9.656077  8.081564  8.948798  3.708220  5.410925 12.714925  7.666618\n [36] 10.636295 11.886290 14.767056  8.670500  7.931076  5.338484  5.097557\n [43]        NA 11.444994  6.093762  3.192188  1.563749  8.753929  4.177170\n [50] 12.242498  5.781476 12.783701  4.418721  8.442989  4.282396  9.395394\n [57]  8.255719  6.016290  8.026494  9.180810  2.038727  5.273544  7.225220\n [64]  6.654107 12.260485 10.688362  9.773488  8.216967  5.093565  6.142304\n [71]  3.274337  8.547150  9.381826  7.061813  4.016495  7.543794  6.976389\n [78] 11.550401  5.209433  3.872522 13.043037  8.277356  3.231859  8.553664\n [85]  4.576422  2.213665 11.475262  6.469006  5.333390  5.656304  6.209727\n [92]  8.908905  6.956097  9.642321  7.188749 12.413663  6.020730  8.507994\n [99] 11.776177  3.387353\n\n\nNow, we’ll test the behavior of the getRMSE function without specifying behavior to deal with missing values…\n\ngetRMSE(resp.1, pred)\n\n[1] NA\n\n\n… and with specifying behavior to deal with missing values\n\ngetRMSE(resp.1, pred, na.rm=TRUE)\n\n[1] 0.9648353\n\n\n\nCreate getMAE function for evaluating predictions:\n\n\\[MAE = \\frac{1}{n}\\sum_{i=1}^n |y_i - \\hat{y}_i|\\]\n\ngetMAE &lt;- function(responses, predictions, ...){\n  AE &lt;- as.numeric(map2(responses, predictions, \\(x,y) abs(x-y)))\n  MAE &lt;- mean(AE,...)\n  return(MAE)\n}\n\nWe’ll test the getMAE function behavior without na.rm…\n\ngetMAE(resp.1, pred)\n\n[1] NA\n\n\n…And then we’ll test the getMAE function with the na.rm function:\n\ngetMAE(resp.1, pred, na.rm=TRUE)\n\n[1] 0.8225972\n\n\nHere, we’ll create a wrapper function that implements both getRMSE and getMAE.\n\nevalPred &lt;- function(responses, predictions, RMSE=TRUE, MAE=TRUE, ...){\n  \n  if(!is.numeric(responses)|!is.numeric(predictions)){\n    stop(\"Input should be numeric (atomic) vector\")\n  } else if(!is.atomic(responses)|!is.atomic(predictions)){\n    stop(\"Needs to be simpler data\")\n  } else if(!is.vector(responses)|!is.vector(predictions)){\n    stop(\"this is not the vector you are looking for\")\n  }\n  \n  \n  if(RMSE==TRUE){ \n    RMSE &lt;- getRMSE(responses, predictions, ...)\n  } else {\n    RMSE &lt;- as.numeric(NA)\n  }\n  \n  if(MAE==TRUE){\n    MAE &lt;- getMAE(responses, predictions, ...)\n  } else {\n    MAE &lt;- as.numeric(NA)\n  }\n  \n  #output &lt;- (RMSE, MAE)\n  outRMSE &lt;-as_tibble(RMSE) |&gt;\n    rename(\"RMSE\"=\"value\")\n  \n  outMAE &lt;-as_tibble(MAE) |&gt;\n    rename(\"MAE\" = \"value\")\n  \n  out &lt;-merge(outRMSE, outMAE)\n  \nreturn(out)\n}\n\nHere, we’ll test evalPred across multiple scenarios:\n*First, we’ll look at RMSE only:\n\nevalPred(resp, pred, MAE=FALSE)\n\n       RMSE MAE\n1 0.9581677  NA\n\n\nThen, we’ll look at MAE only:\n\nevalPred(resp, pred, RMSE=FALSE)\n\n  RMSE       MAE\n1   NA 0.8155776\n\n\nThen…both metrics:\n\nevalPred(resp, pred)\n\n       RMSE       MAE\n1 0.9581677 0.8155776\n\n\nTest with missing data:\n\nevalPred(resp.1, pred, na.rm=TRUE)\n\n       RMSE       MAE\n1 0.9648353 0.8225972\n\n\nTest with incorrect inputs:\n\n#try() allows for evalution and demonstrates error without stopping entire document render.\ntry(evalPred(resp, A.df))\n\nError in evalPred(resp, A.df) : Input should be numeric (atomic) vector"
  },
  {
    "objectID": "ST588Homework6.html#task-3-querying-an-api-and-a-tidy-style-function",
    "href": "ST588Homework6.html#task-3-querying-an-api-and-a-tidy-style-function",
    "title": "ST588 Homework 6\nMatt Bray",
    "section": "Task 3: Querying an API and a Tidy-Style Function",
    "text": "Task 3: Querying an API and a Tidy-Style Function\n\nUse GET() from the httr package to return information about a topic that you are interested in that has been in the news lately, and store as R object.\n\n\nURL_ids&lt;- \"https://newsapi.org/v2/everything?q=spacex&apiKey=2a263eef22a94f42ab1bbd0802661e28\"\n\nid_info &lt;- httr::GET(URL_ids)\nstr(id_info, max.level=1)\n\nList of 10\n $ url        : chr \"https://newsapi.org/v2/everything?q=spacex&apiKey=2a263eef22a94f42ab1bbd0802661e28\"\n $ status_code: int 200\n $ headers    :List of 16\n  ..- attr(*, \"class\")= chr [1:2] \"insensitive\" \"list\"\n $ all_headers:List of 1\n $ cookies    :'data.frame':    0 obs. of  7 variables:\n $ content    : raw [1:80119] 7b 22 73 74 ...\n $ date       : POSIXct[1:1], format: \"2024-10-17 03:33:37\"\n $ times      : Named num [1:6] 0 0.0237 0.041 0.0756 0.133 ...\n  ..- attr(*, \"names\")= chr [1:6] \"redirect\" \"namelookup\" \"connect\" \"pretransfer\" ...\n $ request    :List of 7\n  ..- attr(*, \"class\")= chr \"request\"\n $ handle     :Class 'curl_handle' &lt;externalptr&gt; \n - attr(*, \"class\")= chr \"response\"\n\nparsed &lt;- fromJSON(rawToChar(id_info$content))\nspacex_info &lt;- as_tibble(parsed$articles)\nspacex_info\n\n# A tibble: 100 × 8\n   source$id $name author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;NA&gt;      Yaho… Danny… FAA … \"The Feder… http… &lt;NA&gt;       2024-09-17… \"If yo…\n 2 &lt;NA&gt;      [Rem… &lt;NA&gt;   [Rem… \"[Removed]\" http… &lt;NA&gt;       2024-10-13… \"[Remo…\n 3 wired     Wired Marta… Spac… \"By provin… http… https://m… 2024-10-14… \"This …\n 4 &lt;NA&gt;      Yaho… Karis… Card… \"Cards Aga… http… &lt;NA&gt;       2024-09-20… \"If yo…\n 5 &lt;NA&gt;      Yaho… Marie… Spac… \"NASA and … http… &lt;NA&gt;       2024-10-08… \"If yo…\n 6 &lt;NA&gt;      Gizm… Tom M… Spac… \"SpaceX op… http… https://g… 2024-10-09… \"Space…\n 7 &lt;NA&gt;      Gizm… Adam … Spac… \"The compa… http… https://g… 2024-09-17… \"Space…\n 8 &lt;NA&gt;      Gizm… Passa… Spac… \"The compa… http… https://g… 2024-09-20… \"The F…\n 9 &lt;NA&gt;      Gizm… Passa… Spac… \"The compa… http… https://g… 2024-09-24… \"Space…\n10 &lt;NA&gt;      Gizm… Matt … Card… \"Cards Aga… http… https://g… 2024-09-21… \"The c…\n# ℹ 90 more rows\n\nx &lt;- pluck(spacex_info)\nx\n\n# A tibble: 100 × 8\n   source$id $name author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;NA&gt;      Yaho… Danny… FAA … \"The Feder… http… &lt;NA&gt;       2024-09-17… \"If yo…\n 2 &lt;NA&gt;      [Rem… &lt;NA&gt;   [Rem… \"[Removed]\" http… &lt;NA&gt;       2024-10-13… \"[Remo…\n 3 wired     Wired Marta… Spac… \"By provin… http… https://m… 2024-10-14… \"This …\n 4 &lt;NA&gt;      Yaho… Karis… Card… \"Cards Aga… http… &lt;NA&gt;       2024-09-20… \"If yo…\n 5 &lt;NA&gt;      Yaho… Marie… Spac… \"NASA and … http… &lt;NA&gt;       2024-10-08… \"If yo…\n 6 &lt;NA&gt;      Gizm… Tom M… Spac… \"SpaceX op… http… https://g… 2024-10-09… \"Space…\n 7 &lt;NA&gt;      Gizm… Adam … Spac… \"The compa… http… https://g… 2024-09-17… \"Space…\n 8 &lt;NA&gt;      Gizm… Passa… Spac… \"The compa… http… https://g… 2024-09-20… \"The F…\n 9 &lt;NA&gt;      Gizm… Passa… Spac… \"The compa… http… https://g… 2024-09-24… \"Space…\n10 &lt;NA&gt;      Gizm… Matt … Card… \"Cards Aga… http… https://g… 2024-09-21… \"The c…\n# ℹ 90 more rows"
  }
]